---
title: "ROPES Hub Dashboard"
---

```{shinylive-python}
#| standalone: true
#| viewerHeight: 600
#| components: [viewer]
from shiny import App, ui, render, reactive
import pandas as pd
import io

# Sample data - tab-separated
data = """
Study_ID	Title	Author	Year	Product	Kind_of_paper	Journal_Conference	Grouping
TemplerRodrigues 2022	A Qualitative Evaluation of the Missouri State University S-STEM Program Highlighting the Importance of Taking an Intersectional Approach in Program Evaluations.	Templer Rodrigues	2022	Journal article	Overview of program	Journal of STEM Education: Innovations & Research	STEM Education Journal
Wright 2021	Increasing Retention of STEM Students with Financial Need via the NSF S-STEM DESIRE Scholarship Program.	Wright	2021	Journal article	Overview of program	Journal of STEM Education: Innovations & Research	STEM Education Journal
Kalevitch 2015	Building a Community of Scholars: One University's Story of Students Engaged in Learning Science, Mathematics, and Engineering Through a NSF S-STEM Grant - Part II.	Kalevitch	2015	Journal article	Overview of program	Journal of STEM Education: Innovations & Research	STEM Education Journal
Wilson 2012	Increasing Access for Economically Disadvantaged Students: The NSF/CSEM & S-STEM Programs at Louisiana State University.	Wilson	2012	Journal article	Overview of program	Journal of Science Education & Technology	Science Education Journal
FANG 2019	Impacts of Industry Seminars and a Student Design Competition in an Engineering Education Scholarship Program.	Fang	2019	Journal article	Research/evaluation	International Journal of Engineering Education	Engineering Education Journal
"""

# Convert the tab-separated string to a DataFrame
df = pd.read_csv(io.StringIO(data.strip()), sep='\t')

app_ui = ui.page_fluid(
    ui.panel_title("Systematic Literature Review Dashboard"),
    ui.layout_sidebar(
        ui.sidebar(
            ui.input_text("title_search", "Search in Title", placeholder="Enter keywords"),
            ui.input_text("journal_search", "Search in Journal/Conference", placeholder="Enter keywords"),
            ui.input_select(
                "product_filter",
                "Product",
                choices=["All"] + list(df["Product"].unique()),
            ),
            ui.input_select(
                "kind_of_paper_filter",
                "Kind of Paper",
                choices=["All"] + list(df["Kind_of_paper"].unique()),
            ),
            ui.input_select(
                "grouping_filter",
                "Grouping",
                choices=["All"] + list(df["Grouping"].unique()),
            ),
            width=300,
        ),
        ui.card(
            ui.card_header("Filtered Papers"),
            ui.output_data_frame("papers_table"),
        ),
    ),
)

def server(input, output, session):
    @reactive.calc
    def filtered_data():
        data = df.copy()
        
        if input.title_search():
            data = data[data["Title"].str.contains(input.title_search(), case=False)]
        
        if input.journal_search():
            data = data[data["Journal_Conference"].str.contains(input.journal_search(), case=False)]
        
        if input.product_filter() != "All":
            data = data[data["Product"] == input.product_filter()]
        
        if input.kind_of_paper_filter() != "All":
            data = data[data["Kind_of_paper"] == input.kind_of_paper_filter()]
        
        if input.grouping_filter() != "All":
            data = data[data["Grouping"] == input.grouping_filter()]
        
        return data

    @output
    @render.data_frame
    def papers_table():
        return render.DataGrid(
            filtered_data(),
            row_selection_mode="multiple",
            width="100%",
            height="100%",
        )

app = App(app_ui, server)
```